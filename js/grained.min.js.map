{"version":3,"file":"grained.min.js","names":["window","doc","grained","ele","opt","selectorElement","element","elementId","getElementById","split","id","style","position","overflow","prefixes","options","animate","patternWidth","patternHeight","grainOpacity","grainDensity","grainWidth","grainHeight","grainChaos","grainSpeed","Object","keys","forEach","key","noise","canvas","createElement","ctx","getContext","width","height","w","h","rgb","Math","random","fillStyle","join","fillRect","toDataURL","generateNoise","animation","keyFrames","pre","length","keyVal","animationAdded","parentElement","removeChild","type","innerHTML","body","appendChild","styleAdded","sheet","selector","rules","index","ins","rule","insertRule","addRule","console","error","document"],"sources":["grained.js"],"mappings":"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","sourcesContent":["/*! Grained.js\n* Author : Sarath Saleem  - https://github.com/sarathsaleem\n* MIT license: http://opensource.org/licenses/MIT\n* GitHub : https://github.com/sarathsaleem/grained\n* v0.0.1\n*/\n(function (window, doc) {\n\n    \"use strict\";\n\n    function grained(ele, opt) {\n\n        var element = null,\n            elementId = null,\n            selectorElement = null;\n\n        if (typeof ele === 'string') {\n            element = doc.getElementById(ele.split('#')[1]);\n        }\n\n        if (!element) {\n            console.error('Grained: cannot find the element with id ' + ele);\n            return;\n        } else {\n            elementId = element.id;\n        }\n\n        //set style for parent\n        if (element.style.position !== 'absolute') {\n            element.style.position = 'relative';\n        }\n        element.style.overflow = 'hidden';\n\n        var prefixes = [\"\", \"-moz-\", \"-o-animation-\", \"-webkit-\", \"-ms-\"];\n\n        //default option values\n        var options = {\n            animate: true,\n            patternWidth: 100,\n            patternHeight: 100,\n            grainOpacity: 0.1,\n            grainDensity: 1,\n            grainWidth: 1,\n            grainHeight: 1,\n            grainChaos: 0.5,\n            grainSpeed: 20\n\n        };\n\n        Object.keys(opt).forEach(function (key) {\n            options[key] = opt[key];\n        });\n\n\n        var generateNoise = function () {\n            var canvas = doc.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            canvas.width = options.patternWidth;\n            canvas.height = options.patternHeight;\n            for (var w = 0; w < options.patternWidth; w += options.grainDensity) {\n                for (var h = 0; h < options.patternHeight; h += options.grainDensity) {\n                    var rgb = Math.random() * 256 | 0;\n                    ctx.fillStyle = 'rgba(' + [rgb, rgb, rgb, options.grainOpacity].join() + ')';\n                    ctx.fillRect(w, h, options.grainWidth, options.grainHeight);\n                }\n            }\n            return canvas.toDataURL('image/png');\n        };\n\n        function addCSSRule(sheet, selector, rules, index) {\n            var ins = '';\n            if (selector.length) {\n                ins = selector + \"{\" + rules + \"}\";\n            } else {\n                ins = rules;\n            }\n\n            if (\"insertRule\" in sheet) {\n                sheet.insertRule(ins, index);\n            } else if (\"addRule\" in sheet) {\n                sheet.addRule(selector, rules, index);\n            }\n        }\n\n\n        var noise = generateNoise();\n\n        var animation = '',\n            keyFrames = ['0%:-10%,10%', '10%:-25%,0%', '20%:-30%,10%', '30%:-30%,30%', '40%::-20%,20%', '50%:-15%,10%', '60%:-20%,20%', '70%:-5%,20%', '80%:-25%,5%', '90%:-30%,25%', '100%:-10%,10%'];\n\n        var pre = prefixes.length;\n        while (pre--) {\n            animation += '@' + prefixes[pre] + 'keyframes grained{';\n            for (var key = 0; key < keyFrames.length; key++) {\n                var keyVal = keyFrames[key].split(':');\n                animation += keyVal[0] + '{';\n                animation += prefixes[pre] + 'transform:translate(' + keyVal[1] + ');';\n                animation += '}';\n            }\n            animation += '}';\n        }\n\n        //add animation keyframe\n        var animationAdded = doc.getElementById('grained-animation');\n        if (animationAdded) {\n            animationAdded.parentElement.removeChild(animationAdded);\n        }\n        var style = doc.createElement(\"style\");\n        style.type = \"text/css\";\n        style.id = 'grained-animation';\n        style.innerHTML = animation;\n        doc.body.appendChild(style);\n\n        //add custimozed style\n        var styleAdded = doc.getElementById('grained-animation-' + elementId);\n        if (styleAdded) {\n            styleAdded.parentElement.removeChild(styleAdded);\n        }\n\n        style = doc.createElement(\"style\");\n        style.type = \"text/css\";\n        style.id = 'grained-animation-' + elementId;\n        doc.body.appendChild(style);\n\n        var rule = 'background-image: url(' + noise + ');';\n        rule += 'position: absolute;content: \"\";height: 300%;width: 300%;left: -100%;top: -100%;';\n        pre = prefixes.length;\n        if (options.animate) {\n            while (pre--) {\n                rule += prefixes[pre] + 'animation-name:grained;';\n                rule += prefixes[pre] + 'animation-iteration-count: infinite;';\n                rule += prefixes[pre] + 'animation-duration: ' + options.grainChaos + 's;';\n                rule += prefixes[pre] + 'animation-timing-function: steps(' +options.grainSpeed + ', end);';\n            }\n        }\n\n        //selecter element to add grains\n        selectorElement = '#' + elementId + '::before';\n\n\n        addCSSRule(style.sheet, selectorElement, rule);\n\n\n    }\n\n    window.grained = grained;\n    //END\n})(window, document);\n"]}